// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . 2 2 2 2 2 2 2 2 2 2 
. . . . . . 2 2 2 2 2 2 2 2 2 2 
. . . . . . 2 2 2 2 2 . . . 2 2 
. . . . . . 2 2 2 2 2 . . . 2 2 
. . . . . . 2 2 2 2 2 . . . 2 2 
2 . . . 2 2 2 2 2 2 2 . . . 2 2 
2 . . . 2 2 2 2 2 2 2 . . . 2 2 
2 . . . 2 2 2 2 2 2 2 . . . 2 2 
2 . . . 2 2 2 2 2 2 2 . . . 2 2 
2 . . . . . . . . . . . . . 2 2 
2 . . . . . . . . . . . . . 2 2 
2 . . . . . . . . . . . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight1,sprites.dungeon.doorOpenNorth], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 2 . . . 2 2 2 2 2 . . . 2 2 2 
2 2 . . . 2 2 2 2 2 . . . . . 2 
2 2 . . . 2 2 2 2 2 . . . . . . 
2 2 . . . 2 2 2 2 2 . . . . . 2 
2 2 . . . 2 2 2 2 2 . . . 2 2 2 
2 2 . . . 2 2 2 2 2 . . . 2 2 2 
2 2 . . . 2 2 2 2 2 . . . 2 2 2 
2 2 . . . 2 2 2 2 2 . . . 2 2 2 
2 2 . . . 2 2 2 2 2 . . . 2 2 2 
2 2 . . . 2 2 2 2 2 . . . 2 2 2 
2 2 2 . 2 2 2 2 2 2 . . . 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight1,sprites.dungeon.doorLockedNorth,sprites.dungeon.purpleSwitchUp], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . 2 2 
2 . . . . . . . . . . . . . 2 2 
2 . . . . . . . . . . . . . 2 2 
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 . . . 2 2 2 2 2 2 . . . . 2 
2 2 . . . 2 2 2 2 2 2 . . . . . 
2 2 . . . 2 2 2 2 2 2 . . . . 2 
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 2 . 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight1,sprites.dungeon.purpleSwitchDown,myTiles.tile1], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010101010101010101010101010101010100000000000000000000000001010101000000000000000000000000010101010000000000000000000000000101010100000001010101010100000000000001000000000002000000000000000000010000000000000000000000000000000100000000000000000000000000000001030000010101010101000000000000010000000000000000000000000101010100000000000000000000000001010101000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 . . . 2 2 2 2 2 2 . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . 2 2 2 2 2 2 . . . . . . 
2 . . . . . . . . . . . . 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 . . . . . . . . . . . . 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . 2 2 2 2 
2 . . . . . . . . . . . 2 2 2 2 
2 . . . . . . . . . . . 2 . . . 
2 . . . 2 2 2 2 2 . . . 2 . . . 
2 . . . . . . . . . . . 2 . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . 2 2 2 2 2 . . . 2 . . . 
2 . . . . . . . . . . . 2 . . . 
2 . . . . . . . . . . . 2 . . . 
2 . . . . . . . . . . . 2 2 2 2 
2 . . . . . . . . . . . 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile2,sprites.dungeon.chestOpen,myTiles.tile4], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . 2 . . . . 
. . . . . 2 . . 2 . . 2 . . . . 
2 . . . . . . . 2 . 2 . . . 2 . 
. . . . 2 2 . . . . . . . . . . 
. . . . . . . . 2 . 2 . . . . . 
. . . . . . . . . . . . . . . . 
. 2 . . 2 . . . 2 . . . . . . . 
. . . . . . . . . . . . . 2 . . 
. . . . . . . . . . . . . . . . 
. 2 . . . . . 2 . . . . . 2 2 2 
. . . . . 2 . . . . . . . . . 2 
. . . . . . . 2 . . . . . 2 2 2 
. . . . . . . . . . . . . 2 . . 
. . . . . 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,sprites.builtin.forestTiles0,sprites.castle.saplingPine,sprites.dungeon.stairLarge,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile5], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . 2 . . . . . 2 2 2 2 2 
. . . . . 2 . 2 2 2 . 2 2 . . 2 
. . . . . 2 . 2 2 2 2 2 2 . . 2 
. . . . . 2 . 2 . . . . 2 . 2 2 
. . . . . 2 . 2 . 2 2 . . . 2 2 
. . . . . 2 . 2 . 2 2 . 2 2 2 2 
. . . . . 2 . . . . . . . . 2 2 
. . . . . 2 2 2 . 2 2 . 2 . 2 2 
. . . . . 2 2 2 . 2 2 . 2 . 2 2 
. . . . . 2 2 2 . 2 2 . 2 . 2 2 
. . . . . . . . . 2 2 . 2 . 2 2 
. . . . . 2 2 2 2 2 2 . 2 . . 2 
. . . . . 2 . . . . . . 2 2 . 2 
. . . . . 2 . 2 2 2 2 2 2 2 . 2 
. . . . . 2 . . . . 2 2 2 2 . 2 
. . . . . 2 2 2 2 . . . . . . 2 
`, [myTiles.transparency16,sprites.dungeon.doorClosedNorth,myTiles.tile6,myTiles.tile7,myTiles.tile8], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
..................................................
`, [myTiles.transparency16,myTiles.tile9,myTiles.tile11], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile8":
            case "tile10":return tile10;
            case "myTile7":
            case "tile9":return tile9;
            case "myTile9":
            case "tile11":return tile11;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
